{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://alien-chat-extension/./src/js/services/domService.js","webpack://alien-chat-extension/./src/js/utils/calculator.js","webpack://alien-chat-extension/./src/js/components/Calculator.js","webpack://alien-chat-extension/./src/js/components/Tabs.js","webpack://alien-chat-extension/./src/js/constants/config.js","webpack://alien-chat-extension/./src/js/components/Panel.js","webpack://alien-chat-extension/./src/js/utils/parser.js","webpack://alien-chat-extension/./src/js/styles/styles.js","webpack://alien-chat-extension/./src/js/main.js"],"sourcesContent":["/**\n * Service for handling DOM-related operations\n */\nexport class DOMService {\n  /**\n   * Creates a new element with given properties\n   * @param {string} tag - HTML tag name\n   * @param {Object} props - Properties to set on element\n   * @returns {HTMLElement} Created element\n   */\n  static createElement(tag, props = {}) {\n    const element = document.createElement(tag);\n    Object.entries(props).forEach(([key, value]) => {\n      if (key === 'className') {\n        element.className = value;\n      } else if (key === 'innerHTML') {\n        element.innerHTML = value;\n      } else if (key === 'textContent') {\n        element.textContent = value;\n      } else {\n        element.setAttribute(key, value);\n      }\n    });\n    return element;\n  }\n\n  /**\n   * Injects styles into the document head\n   * @param {string} styles - CSS styles to inject\n   */\n  static injectStyles(styles) {\n    const styleSheet = document.createElement('style');\n    styleSheet.textContent = styles;\n    document.head.appendChild(styleSheet);\n  }\n\n  /**\n   * Creates a button element with given properties\n   * @param {Object} props - Button properties\n   * @returns {HTMLButtonElement} Created button\n   */\n  static createButton(props = {}) {\n    return this.createElement('button', {\n      type: 'button',\n      ...props\n    });\n  }\n\n  /**\n   * Creates a textarea element with given properties\n   * @param {Object} props - Textarea properties\n   * @returns {HTMLTextAreaElement} Created textarea\n   */\n  static createTextarea(props = {}) {\n    return this.createElement('textarea', props);\n  }\n\n  /**\n   * Adds event listeners to an element\n   * @param {HTMLElement} element - Target element\n   * @param {Object} listeners - Event listeners object\n   */\n  static addEventListeners(element, listeners) {\n    Object.entries(listeners).forEach(([event, handler]) => {\n      element.addEventListener(event, handler);\n    });\n  }\n\n  /**\n   * Creates a download link for content\n   * @param {string} content - Content to download\n   * @param {string} filename - Name of file to download\n   */\n  static downloadContent(content, filename) {\n    const blob = new Blob([content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = this.createElement('a', { href: url, download: filename });\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Copies text to clipboard\n   * @param {string} text - Text to copy\n   * @returns {Promise} Promise that resolves when text is copied\n   */\n  static copyToClipboard(text) {\n    return navigator.clipboard.writeText(text);\n  }\n}\n","/**\n * Evaluates a mathematical expression string\n * @param {string} expr - The expression to evaluate\n * @returns {string|number} - The result or 'Invalid' if expression is invalid\n */\nexport function evaluateExpression(expr) {\n  try {\n    // Remove all spaces first\n    expr = expr.replace(/\\s+/g, '').trim();\n    \n    // Return empty if no input\n    if (expr === '') {\n      return '';\n    }\n    \n    // If it's just a number (including negative), return it directly\n    if (/^-?\\d+\\.?\\d*$/.test(expr)) {\n      return parseFloat(expr);\n    }\n    \n    // Basic validation - allow negative numbers\n    if (!/^[-\\d+*/().]+$/.test(expr)) {\n      return 'Invalid';\n    }\n\n    // Handle negative numbers by marking them\n    expr = expr\n      .replace(/^-|\\G(?:[-+*/])-/g, '~')\n      .replace(/\\(-/g, '(~');\n    \n    const tokens = parseTokens(expr);\n    const result = calculate(tokens);\n    \n    // Validate the result\n    if (typeof result !== 'number' || !isFinite(result)) {\n      return 'Invalid';\n    }\n    \n    // Format the result\n    return Number.isInteger(result) ? result : parseFloat(result.toFixed(4));\n    \n  } catch (e) {\n    console.error('Calculator error:', e);\n    return 'Invalid';\n  }\n}\n\nfunction parseTokens(expr) {\n  const tokens = [];\n  let numBuffer = '';\n  let isNegative = false;\n\n  for (let i = 0; i < expr.length; i++) {\n    const char = expr[i];\n    if (char === '~') {\n      isNegative = true;\n    } else if (/\\d/.test(char) || char === '.') {\n      numBuffer += char;\n    } else {\n      if (numBuffer) {\n        tokens.push(isNegative ? -parseFloat(numBuffer) : parseFloat(numBuffer));\n        numBuffer = '';\n        isNegative = false;\n      }\n      if ('+-*/()'.includes(char)) {\n        tokens.push(char);\n      }\n    }\n  }\n  \n  if (numBuffer) {\n    tokens.push(isNegative ? -parseFloat(numBuffer) : parseFloat(numBuffer));\n  }\n  \n  return tokens;\n}\n\nfunction calculate(tokens) {\n  let numbers = [];\n  let operators = [];\n  \n  const precedence = {\n    '+': 1,\n    '-': 1,\n    '*': 2,\n    '/': 2\n  };\n  \n  function applyOp() {\n    const op = operators.pop();\n    const b = numbers.pop();\n    const a = numbers.pop();\n    \n    switch(op) {\n      case '+': numbers.push(a + b); break;\n      case '-': numbers.push(a - b); break;\n      case '*': numbers.push(a * b); break;\n      case '/': numbers.push(a / b); break;\n    }\n  }\n  \n  for (let token of tokens) {\n    if (typeof token === 'number') {\n      numbers.push(token);\n    } else if ('+-*/'.includes(token)) {\n      while (operators.length && precedence[operators[operators.length - 1]] >= precedence[token]) {\n        applyOp();\n      }\n      operators.push(token);\n    }\n  }\n  \n  while (operators.length) {\n    applyOp();\n  }\n  \n  return numbers[0];\n}\n","import { evaluateExpression } from '../utils/calculator.js';\nimport { DOMService } from '../services/domService.js';\n\nexport class Calculator {\n  constructor() {\n    this.isEnabled = false;\n  }\n\n  /**\n   * Creates calculator toggle UI\n   * @returns {HTMLElement} Calculator toggle element\n   */\n  createToggle() {\n    const container = DOMService.createElement('div', {\n      className: 'dataflash-calculator-toggle'\n    });\n\n    const leftSection = DOMService.createElement('div', {\n      className: 'dataflash-calc-left'\n    });\n\n    const toggle = DOMService.createElement('label', {\n      className: 'dataflash-toggle'\n    });\n\n    const input = DOMService.createElement('input', {\n      type: 'checkbox',\n      id: 'calcToggle',\n      checked: this.isEnabled\n    });\n\n    const slider = DOMService.createElement('span', {\n      className: 'dataflash-toggle-slider'\n    });\n\n    const label = DOMService.createElement('span', {\n      className: 'dataflash-calc-label',\n      textContent: 'Calculator'\n    });\n\n    const resultContainer = DOMService.createElement('div', {\n      className: 'dataflash-calc-container'\n    });\n\n    const result = DOMService.createElement('span', {\n      className: 'dataflash-calc-result'\n    });\n\n    toggle.appendChild(input);\n    toggle.appendChild(slider);\n    leftSection.appendChild(toggle);\n    leftSection.appendChild(label);\n    resultContainer.appendChild(result);\n    container.appendChild(leftSection);\n    container.appendChild(resultContainer);\n\n    // Add initial state class if calculator is enabled\n    if (this.isEnabled) {\n      container.classList.add('calculator-enabled');\n    }\n\n    // Add click handler for the result to copy it\n    result.addEventListener('click', () => {\n      if (result.textContent) {\n        const value = result.textContent.replace('= ', '');\n        navigator.clipboard.writeText(value);\n      }\n    });\n\n    // Add toggle handler directly to the input\n    input.addEventListener('change', () => {\n      this.isEnabled = input.checked;\n      console.log('Calculator enabled:', this.isEnabled);\n      container.classList.toggle('calculator-enabled', this.isEnabled);\n    });\n\n    return container;\n  }\n\n  /**\n   * Handles calculator mode toggle\n   * @param {HTMLElement} textarea - The input textarea\n   * @param {Function} updateUI - Function to update the UI\n   */\n  handleToggle(textarea, updateUI) {\n    // Wait for elements to be available\n    const maxAttempts = 10;\n    let attempts = 0;\n\n    const initializeToggle = () => {\n      const calcToggle = document.querySelector('#calcToggle');\n      const container = document.querySelector('.dataflash-calculator-toggle');\n      \n      if (!calcToggle || !container) {\n        if (attempts < maxAttempts) {\n          attempts++;\n          setTimeout(initializeToggle, 100); // Retry after 100ms\n          return;\n        }\n        console.error('Calculator toggle elements not found after retries');\n        return;\n      }\n\n      // Add change handler to the toggle\n      calcToggle.addEventListener('change', () => {\n        this.isEnabled = calcToggle.checked;\n        console.log('Calculator enabled:', this.isEnabled);\n        \n        // Update container class\n        container.classList.toggle('calculator-enabled', this.isEnabled);\n        \n        // Update textarea placeholder based on calculator mode\n        textarea.placeholder = this.isEnabled ? 'Try writing here \"1 + 2 + 3\"' : 'Paste data here...';\n        \n        // Process current input if calculator is enabled\n        if (this.isEnabled && textarea.value.trim()) {\n          this.processExpression(textarea.value.trim(), updateUI);\n        } else {\n          this.updateResult('');\n        }\n\n        // Call the updateUI callback\n        if (updateUI) {\n          updateUI();\n        }\n      });\n\n      // Set initial state\n      calcToggle.checked = this.isEnabled;\n      container.classList.toggle('calculator-enabled', this.isEnabled);\n      // Set initial placeholder\n      textarea.placeholder = this.isEnabled ? 'Try writing here \"1 + 2 + 3\"' : 'Paste data here...';\n    };\n\n    // Start initialization\n    initializeToggle();\n  }\n\n  /**\n   * Updates the calculator result display\n   * @param {string|number} result - The result to display\n   */\n  updateResult(result) {\n    const resultElement = document.querySelector('.dataflash-calc-result');\n    if (resultElement) {\n      console.log('Updating result element with:', result); // Debug log\n      \n      if (result === 'Invalid') {\n        resultElement.textContent = 'Na';\n      } else if (result === '') {\n        resultElement.textContent = '';\n      } else {\n        // Format number with commas for thousands\n        const formattedResult = typeof result === 'number' ? \n          result.toLocaleString() : result;\n        resultElement.textContent = `= ${formattedResult}`;\n      }\n\n      // Make sure the result is visible\n      resultElement.style.display = result === '' ? 'none' : 'block';\n      console.log('Result element content:', resultElement.textContent); // Debug log\n    } else {\n      console.error('Result element not found'); // Debug log\n    }\n  }\n\n  /**\n   * Processes a calculator expression\n   * @param {string} expr - The expression to evaluate\n   * @param {Function} updateUI - Function to update the UI\n   */\n  processExpression(expr, updateUI) {\n    if (!this.isEnabled || !expr) {\n      this.updateResult('');\n      return;\n    }\n\n    try {\n      console.log('Processing expression:', expr); // Debug log\n      const result = evaluateExpression(expr);\n      console.log('Evaluation result:', result); // Debug log\n      \n      // Handle empty or invalid results\n      if (result === '' || result === 'Invalid') {\n        this.updateResult(result);\n        return;\n      }\n\n      // Convert result to number for calculations\n      const numericResult = typeof result === 'number' ? result : parseFloat(result);\n      \n      if (!isNaN(numericResult)) {\n        this.updateResult(numericResult);\n      } else {\n        this.updateResult('Invalid');\n      }\n    } catch (error) {\n      console.error('Calculator error:', error);\n      this.updateResult('Invalid');\n    }\n  }\n\n  /**\n   * Handles input changes in calculator mode\n   * @param {string} text - The input text\n   * @param {Function} updateUI - Function to update the UI\n   */\n  handleInput(text, updateUI) {\n    if (this.isEnabled) {\n      this.processExpression(text, updateUI);\n    }\n  }\n}\n","import { DOMService } from '../services/domService.js';\n\nexport class Tabs {\n  constructor() {\n    this.activeTabs = [{\n      id: 'tab1',\n      name: 'Tab 1',\n      savedSums: []\n    }];\n    this.activeTabId = 'tab1';\n  }\n\n  /**\n   * Updates the tabs UI\n   * @param {HTMLElement} panel - The panel element\n   * @param {Function} onTabChange - Callback for tab changes\n   */\n  updateTabs(panel, onTabChange) {\n    const tabList = panel.querySelector('.dataflash-tab-list');\n    const textarea = panel.querySelector('.dataflash-input');\n    \n    tabList.innerHTML = this.activeTabs.map(tab => `\n      <div class=\"dataflash-tab ${tab.id === this.activeTabId ? 'active' : ''}\" data-tab-id=\"${tab.id}\">\n        <span class=\"dataflash-tab-name\" data-tab-id=\"${tab.id}\">${tab.name}</span>\n        ${this.activeTabs.length > 1 ? `<span class=\"dataflash-tab-close\">×</span>` : ''}\n      </div>\n    `).join('');\n\n    this.addTabEventListeners(panel, tabList, textarea, onTabChange);\n  }\n\n  /**\n   * Adds event listeners to tab elements\n   * @private\n   */\n  addTabEventListeners(panel, tabList, textarea, onTabChange) {\n    // Tab switching\n    tabList.querySelectorAll('.dataflash-tab').forEach(tabEl => {\n      const tabId = tabEl.dataset.tabId;\n      \n      tabEl.addEventListener('click', (e) => {\n        if (e.target === tabEl && tabId !== this.activeTabId) {\n          this.activeTabId = tabId;\n          this.updateTabs(panel, onTabChange);\n          onTabChange();\n          \n          if (textarea) {\n            textarea.value = '';\n          }\n        }\n      });\n    });\n\n    // Tab name editing\n    tabList.querySelectorAll('.dataflash-tab-name').forEach(nameEl => {\n      nameEl.addEventListener('dblclick', (e) => {\n        e.stopPropagation();\n        this.makeTabNameEditable(nameEl, panel, onTabChange);\n      });\n\n      nameEl.addEventListener('click', (e) => {\n        const tabId = nameEl.dataset.tabId;\n        if (tabId !== this.activeTabId) {\n          this.activeTabId = tabId;\n          this.updateTabs(panel, onTabChange);\n          onTabChange();\n          \n          if (textarea) {\n            textarea.value = '';\n          }\n        }\n      });\n    });\n\n    // Tab closing\n    tabList.querySelectorAll('.dataflash-tab-close').forEach(closeBtn => {\n      closeBtn.addEventListener('click', (e) => {\n        e.stopPropagation();\n        this.closeTab(closeBtn, panel, onTabChange);\n      });\n    });\n  }\n\n  /**\n   * Makes a tab name editable\n   * @private\n   */\n  makeTabNameEditable(nameEl, panel, onTabChange) {\n    const tabId = nameEl.dataset.tabId;\n    const tab = this.activeTabs.find(t => t.id === tabId);\n    if (!tab) return;\n\n    const input = DOMService.createElement('input', {\n      className: 'dataflash-tab-input',\n      value: tab.name\n    });\n    \n    const isActive = nameEl.closest('.dataflash-tab').classList.contains('active');\n    input.style.fontWeight = isActive ? '500' : 'normal';\n    \n    nameEl.replaceWith(input);\n    input.focus();\n    input.select();\n\n    const saveName = () => {\n      const newName = input.value.trim() || tab.name;\n      tab.name = newName;\n      this.updateTabs(panel, onTabChange);\n    };\n\n    DOMService.addEventListeners(input, {\n      blur: saveName,\n      keydown: (e) => {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          saveName();\n        } else if (e.key === 'Escape') {\n          this.updateTabs(panel, onTabChange);\n        }\n      }\n    });\n  }\n\n  /**\n   * Closes a tab\n   * @private\n   */\n  closeTab(closeBtn, panel, onTabChange) {\n    const tabId = closeBtn.closest('.dataflash-tab').dataset.tabId;\n    const tabIndex = this.activeTabs.findIndex(t => t.id === tabId);\n    \n    if (tabIndex !== -1) {\n      this.activeTabs.splice(tabIndex, 1);\n      if (this.activeTabId === tabId) {\n        this.activeTabId = this.activeTabs[Math.max(0, tabIndex - 1)].id;\n      }\n      this.updateTabs(panel, onTabChange);\n      onTabChange();\n    }\n  }\n\n  /**\n   * Adds a new tab\n   */\n  addTab() {\n    const newTabId = `tab${this.activeTabs.length + 1}`;\n    this.activeTabs.push({\n      id: newTabId,\n      name: `Tab ${this.activeTabs.length + 1}`,\n      savedSums: []\n    });\n    this.activeTabId = newTabId;\n  }\n\n  /**\n   * Gets the active tab\n   * @returns {Object} The active tab object\n   */\n  getActiveTab() {\n    return this.activeTabs.find(t => t.id === this.activeTabId);\n  }\n}\n","export const KEYBOARD_SHORTCUTS = {\n  TOGGLE_PANEL: {\n    ctrl: true,\n    shift: true,\n    key: 'D'\n  }\n};\n\nexport const UI_CONSTANTS = {\n  PANEL_CLASS: 'dataflash-panel',\n  MINIMIZED_CLASS: 'minimized',\n  MAX_RESULTS: 50,\n  ANIMATION_DURATION: 1000\n};\n\nexport const WHITELISTED_DOMAINS = [\n  'databricks.com'\n];\n\nexport const ICON_URL = chrome.runtime.getURL('public/john.png');\n","import { DOMService } from '../services/domService.js';\nimport { Calculator } from './Calculator.js';\nimport { Tabs } from './Tabs.js';\nimport { parseClipboardData, calculateMetrics } from '../utils/parser.js';\nimport { ICON_URL } from '../constants/config.js';\n\nexport class Panel {\n  constructor() {\n    this.calculator = new Calculator();\n    this.tabs = new Tabs();\n    this.isDragging = false;\n    this.currentX = 0;\n    this.currentY = 0;\n    this.initialX = 0;\n    this.initialY = 0;\n    this.xOffset = 0;\n    this.yOffset = 0;\n  }\n\n  /**\n   * Creates the floating panel UI\n   * @returns {HTMLElement} The panel element\n   */\n  create() {\n    const panel = DOMService.createElement('div', {\n      className: 'dataflash-panel minimized'\n    });\n    \n    panel.innerHTML = `\n      <div class=\"dataflash-header\">\n        <h3 class=\"dataflash-title\">\n          <img src=\"${ICON_URL}\" alt=\"DataFlash\" class=\"dataflash-icon\" />\n          <span>DataFlash</span>\n        </h3>\n        <div class=\"dataflash-controls\">\n          <button class=\"dataflash-minimize\" title=\"Minimize\"></button>\n          <button class=\"dataflash-close\" title=\"Close\"></button>\n        </div>\n      </div>\n      <div class=\"dataflash-tabs\">\n        <div class=\"dataflash-tab-list\"></div>\n        <button class=\"dataflash-add-tab\">+</button>\n      </div>\n      <div class=\"dataflash-content\">\n        <textarea \n          class=\"dataflash-input\" \n          placeholder=\"Paste data here...\"\n          rows=\"6\"\n        ></textarea>\n        <div class=\"dataflash-actions\">\n          <button class=\"dataflash-flush-btn\">Clear</button>\n        </div>\n        <div class=\"dataflash-metrics\">\n          <div class=\"dataflash-saved\"></div>\n        </div>\n      </div>\n    `;\n\n    // Insert calculator toggle\n    const content = panel.querySelector('.dataflash-content');\n    content.insertBefore(this.calculator.createToggle(), content.firstChild);\n\n    this.addEventListeners(panel);\n    document.body.appendChild(panel);\n\n    // Initialize tabs\n    this.tabs.updateTabs(panel, () => this.updateSavedDisplay());\n\n    return panel;\n  }\n\n  /**\n   * Adds event listeners to panel elements\n   * @private\n   */\n  addEventListeners(panel) {\n    const textarea = panel.querySelector('.dataflash-input');\n    const minimizeBtn = panel.querySelector('.dataflash-minimize');\n    const closeBtn = panel.querySelector('.dataflash-close');\n    const addTabBtn = panel.querySelector('.dataflash-add-tab');\n    const clearBtn = panel.querySelector('.dataflash-flush-btn');\n\n    // Panel controls\n    minimizeBtn.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      panel.classList.toggle('minimized');\n    });\n\n    closeBtn.addEventListener('click', (e) => {\n      e.stopPropagation();\n      panel.remove();\n    });\n\n    // Restore from minimized\n    panel.addEventListener('click', (e) => {\n      if (panel.classList.contains('minimized')) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.isDragging = false;\n        \n        if (e.target === panel || \n            e.target.classList.contains('dataflash-icon') ||\n            e.target.classList.contains('dataflash-title')) {\n          panel.classList.remove('minimized');\n          panel.style.transform = `translate(${this.xOffset}px, ${this.yOffset}px)`;\n        }\n      }\n    });\n\n    // Dragging\n    panel.addEventListener('mousedown', this.dragStart.bind(this));\n    document.addEventListener('mousemove', this.drag.bind(this));\n    document.addEventListener('mouseup', this.dragEnd.bind(this));\n\n    // Calculator toggle\n    this.calculator.handleToggle(textarea, () => {\n      // Clear existing metrics when toggling calculator\n      const metricsContainer = document.querySelector('.dataflash-metrics');\n      if (metricsContainer) {\n        metricsContainer.innerHTML = '';\n      }\n      \n      // Process current input if calculator is enabled\n      if (this.calculator.isEnabled) {\n        console.log('Calculator mode enabled, processing input:', textarea.value.trim());\n        if (textarea.value.trim()) {\n          this.calculator.processExpression(textarea.value.trim(), null);\n        }\n      } else {\n        console.log('Calculator mode disabled, clearing input');\n        textarea.value = '';\n        this.calculator.updateResult('');\n      }\n    });\n\n    // Input handling\n    textarea.addEventListener('input', (e) => {\n      const text = e.target.value.trim();\n      \n      // Check if calculator is enabled\n      if (this.calculator.isEnabled) {\n        console.log('Processing calculator input:', text);\n        // Calculator mode - process as expression\n        if (text) {\n          this.calculator.processExpression(text, null);\n          \n          // Prevent data parsing in calculator mode\n          const metricsContainer = document.querySelector('.dataflash-metrics');\n          if (metricsContainer) {\n            metricsContainer.innerHTML = '';\n          }\n        } else {\n          this.calculator.updateResult('');\n        }\n        return; // Exit early to prevent data parsing\n      }\n      \n      // Normal mode - process as data\n      if (text) {\n        const groupedData = parseClipboardData(text);\n        if (groupedData.length > 0) {\n          const metrics = calculateMetrics(groupedData);\n          this.updateUI(metrics);\n        }\n      }\n    });\n\n    // Tab management\n    addTabBtn.addEventListener('click', () => {\n      this.tabs.addTab();\n      this.tabs.updateTabs(panel, () => this.updateSavedDisplay());\n    });\n\n    // Clear button\n    clearBtn.addEventListener('click', () => {\n      textarea.value = '';\n      textarea.dispatchEvent(new Event('input'));\n    });\n  }\n\n  /**\n   * Updates the UI with new metrics\n   * @private\n   */\n  updateUI(metrics) {\n    const metricsContainer = document.querySelector('.dataflash-metrics');\n    const currentMetricsDiv = DOMService.createElement('div', {\n      className: 'dataflash-current-metrics'\n    });\n    \n    // Add df1 label and save button if metrics exist\n    if (metrics.length > 0) {\n      const headerDiv = DOMService.createElement('div', {\n        className: 'dataflash-df-header',\n        innerHTML: `\n          <div class=\"dataflash-df-title\">\n            <h4>df1</h4>\n          </div>\n          <div class=\"dataflash-df-actions\">\n            <button class=\"dataflash-save-df-btn\" title=\"Save Dataframe\">+</button>\n            <button class=\"dataflash-clear-df-btn\" title=\"Clear Dataframe\">-</button>\n          </div>\n        `\n      });\n      currentMetricsDiv.appendChild(headerDiv);\n    }\n\n    // Add table header\n    const tableHeader = DOMService.createElement('div', {\n      className: 'dataflash-metrics-header',\n      innerHTML: `\n        <div class=\"dataflash-metric-row header\">\n          <div class=\"dataflash-metric-col\">Columns</div>\n          <div class=\"dataflash-metric-col\">Total Sum</div>\n        </div>\n      `\n    });\n    currentMetricsDiv.appendChild(tableHeader);\n    \n    metrics.forEach((metric, index) => {\n      const metricDiv = DOMService.createElement('div', {\n        className: 'dataflash-metric-row',\n        innerHTML: `\n          <div class=\"dataflash-metric-col\">${metric.label}</div>\n          <div class=\"dataflash-metric-col\">${metric.sum.toLocaleString()}</div>\n        `\n      });\n      currentMetricsDiv.appendChild(metricDiv);\n    });\n\n    // Clear and update metrics\n    const savedSection = metricsContainer.querySelector('.dataflash-saved');\n    metricsContainer.innerHTML = '';\n    metricsContainer.appendChild(currentMetricsDiv);\n    \n    if (savedSection) {\n      metricsContainer.appendChild(savedSection);\n    } else {\n      metricsContainer.appendChild(DOMService.createElement('div', {\n        className: 'dataflash-saved'\n      }));\n    }\n\n    this.addMetricEventListeners(currentMetricsDiv, metrics);\n  }\n\n  /**\n   * Updates the saved sums display\n   * @private\n   */\n  updateSavedDisplay() {\n    const activeTab = this.tabs.getActiveTab();\n    if (!activeTab) return;\n\n    const savedDisplay = document.querySelector('.dataflash-saved');\n    if (!savedDisplay) return;\n\n    savedDisplay.innerHTML = activeTab.savedSums.map((sum, index) => {\n      // If it's a dataframe (has columns)\n      if (sum.columns) {\n        return `\n          <div class=\"dataflash-saved-item dataframe\">\n            <div class=\"dataflash-saved-header\">\n              <span class=\"dataflash-saved-label\" data-index=\"${index}\">${sum.label}</span>\n              <button class=\"dataflash-delete-btn\" data-index=\"${index}\" title=\"Delete Dataframe\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <path d=\"M3 6h18M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n                </svg>\n              </button>\n            </div>\n            <div class=\"dataflash-saved-table\">\n              <div class=\"dataflash-table-header\">\n                <div class=\"dataflash-table-col\">Column</div>\n                <div class=\"dataflash-table-col\">Total Amount</div>\n                <div class=\"dataflash-table-col\">Actions</div>\n              </div>\n              ${sum.columns.map((col, colIndex) => `\n                <div class=\"dataflash-table-row\">\n                  <div class=\"dataflash-table-col\">${col.label}</div>\n                  <div class=\"dataflash-table-col\">${col.sum.toLocaleString()}</div>\n                  <div class=\"dataflash-table-col\">\n                    <div class=\"dataflash-column-controls\">\n                      <button class=\"dataflash-copy-btn\" data-index=\"${index}\" data-col=\"${colIndex}\" title=\"Copy\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                          <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"/>\n                          <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"/>\n                        </svg>\n                      </button>\n                      ${!this.calculator.isEnabled ? `\n                        <button class=\"dataflash-stats-btn\" data-index=\"${index}\" data-col=\"${colIndex}\" title=\"Statistics\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M18 20V10M12 20V4M6 20v-6\"/>\n                          </svg>\n                        </button>\n                        <button class=\"dataflash-load-btn\" data-index=\"${index}\" data-col=\"${colIndex}\" title=\"Load\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M3 15v4c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2v-4M17 8l-5-5-5 5M12 3v12\"/>\n                          </svg>\n                        </button>\n                      ` : ''}\n                    </div>\n                  </div>\n                </div>\n              `).join('')}\n            </div>\n          </div>\n        `;\n      } else {\n        // Regular saved sum (not a dataframe)\n        return `\n          <div class=\"dataflash-saved-item\">\n            <div class=\"dataflash-saved-info\">\n              <span class=\"dataflash-saved-label\" data-index=\"${index}\">${sum.label}</span>\n              <span class=\"dataflash-saved-value\">${sum.value.toLocaleString()}</span>\n            </div>\n            <div class=\"dataflash-saved-controls\">\n              <button class=\"dataflash-delete-btn\" data-index=\"${index}\" title=\"Delete\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                  <path d=\"M3 6h18M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n                </svg>\n              </button>\n            </div>\n          </div>\n        `;\n      }\n    }).join('');\n\n    this.addSavedItemEventListeners(savedDisplay, activeTab);\n  }\n\n  /**\n   * Adds event listeners to metric elements\n   * @private\n   */\n  addMetricEventListeners(container, metrics) {\n    const saveButton = container.querySelector('.dataflash-save-df-btn');\n    const clearButton = container.querySelector('.dataflash-clear-df-btn');\n\n    if (saveButton) {\n      saveButton.addEventListener('click', () => {\n        const activeTab = this.tabs.getActiveTab();\n        if (activeTab) {\n          if (!activeTab.savedSums) {\n            activeTab.savedSums = [];\n          }\n          \n          // Save all metrics as one dataframe entry\n          activeTab.savedSums.push({\n            value: metrics.reduce((sum, m) => sum + m.sum, 0),\n            label: 'df1',\n            numbers: metrics.map(m => m.numbers).flat(),\n            isNumeric: true,\n            columns: metrics.map(m => ({\n              label: m.label,\n              sum: m.sum,\n              numbers: m.numbers,\n              isNumeric: m.isNumeric\n            }))\n          });\n          \n          this.updateSavedDisplay();\n\n          // Clear the current metrics display\n          const currentMetricsDiv = document.querySelector('.dataflash-current-metrics');\n          if (currentMetricsDiv) {\n            currentMetricsDiv.innerHTML = '';\n          }\n        }\n        \n        const textarea = document.querySelector('.dataflash-input');\n        if (textarea) {\n          textarea.value = '';\n          textarea.dispatchEvent(new Event('input'));\n        }\n      });\n    }\n\n    if (clearButton) {\n      clearButton.addEventListener('click', () => {\n        // Clear the current metrics display\n        const currentMetricsDiv = document.querySelector('.dataflash-current-metrics');\n        if (currentMetricsDiv) {\n          currentMetricsDiv.innerHTML = '';\n        }\n        \n        // Clear the textarea\n        const textarea = document.querySelector('.dataflash-input');\n        if (textarea) {\n          textarea.value = '';\n          textarea.dispatchEvent(new Event('input'));\n        }\n      });\n    }\n  }\n\n  /**\n   * Adds event listeners to saved item elements\n   * @private\n   */\n  addSavedItemEventListeners(container, activeTab) {\n    // Label editing\n    container.querySelectorAll('.dataflash-saved-label').forEach(label => {\n      label.addEventListener('click', (e) => {\n        const index = parseInt(e.target.dataset.index);\n        const currentLabel = activeTab.savedSums[index].label;\n        \n        const input = DOMService.createElement('input', {\n          className: 'dataflash-saved-input',\n          value: currentLabel\n        });\n        \n        e.target.replaceWith(input);\n        input.focus();\n        \n        const saveLabel = () => {\n          activeTab.savedSums[index].label = input.value || `Sum ${index + 1}`;\n          this.updateSavedDisplay();\n        };\n        \n        input.addEventListener('blur', saveLabel);\n        input.addEventListener('keydown', (e) => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            saveLabel();\n          }\n        });\n      });\n    });\n\n    // Copy buttons\n    container.querySelectorAll('.dataflash-copy-btn').forEach(btn => {\n      btn.addEventListener('click', async () => {\n        const index = parseInt(btn.dataset.index);\n        const colIndex = btn.dataset.col ? parseInt(btn.dataset.col) : null;\n        \n        let value;\n        if (colIndex !== null) {\n          // Copy column data\n          const column = activeTab.savedSums[index].columns[colIndex];\n          value = column.numbers.join('\\n');\n        } else {\n          // Copy regular sum\n          value = activeTab.savedSums[index].value;\n        }\n        \n        await DOMService.copyToClipboard(value.toString());\n        \n        const originalHTML = btn.innerHTML;\n        btn.innerHTML = '✓';\n        setTimeout(() => {\n          btn.innerHTML = originalHTML;\n        }, 1000);\n      });\n    });\n\n    // Load buttons\n    container.querySelectorAll('.dataflash-load-btn').forEach(btn => {\n      btn.addEventListener('click', () => {\n        const index = parseInt(btn.dataset.index);\n        const colIndex = parseInt(btn.dataset.col);\n        const column = activeTab.savedSums[index].columns[colIndex];\n        \n        const textarea = document.querySelector('.dataflash-input');\n        if (textarea && column.numbers && column.numbers.length > 0) {\n          textarea.value = `${column.label}\\n${column.numbers.join('\\n')}`;\n          textarea.dispatchEvent(new Event('input'));\n        }\n      });\n    });\n\n    // Delete buttons\n    container.querySelectorAll('.dataflash-delete-btn').forEach(btn => {\n      btn.addEventListener('click', () => {\n        const index = parseInt(btn.dataset.index);\n        activeTab.savedSums.splice(index, 1);\n        this.updateSavedDisplay();\n      });\n    });\n\n    // Statistics buttons\n    container.querySelectorAll('.dataflash-stats-btn').forEach(btn => {\n      btn.addEventListener('click', () => {\n        const index = parseInt(btn.dataset.index);\n        const colIndex = parseInt(btn.dataset.col);\n        const column = activeTab.savedSums[index].columns[colIndex];\n        \n        if (column.numbers && column.numbers.length > 0) {\n          const numbers = column.numbers.map(n => {\n            return typeof n === 'string' ? parseFloat(n.replace(/,/g, '')) : parseFloat(n);\n          });\n          \n          const count = numbers.length;\n          const sum = numbers.reduce((a, b) => a + b, 0);\n          const average = sum / count;\n          const min = Math.min(...numbers);\n          const max = Math.max(...numbers);\n          \n          const statsText = `Statistics for ${column.label}:\nCount: ${count}\nAverage: ${average.toLocaleString()}\nMin: ${min.toLocaleString()}\nMax: ${max.toLocaleString()}`;\n          \n          const textarea = document.querySelector('.dataflash-input');\n          if (textarea) {\n            textarea.value = statsText;\n            textarea.dispatchEvent(new Event('input'));\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Handles start of panel dragging\n   * @private\n   */\n  dragStart(e) {\n    const panel = e.currentTarget;\n    \n    if (panel.classList.contains('minimized')) {\n      return;\n    }\n\n    if (e.target.classList.contains('dataflash-input') || \n        e.target.classList.contains('dataflash-minimize') ||\n        e.target.classList.contains('dataflash-close') ||\n        e.target.classList.contains('dataflash-add-btn') ||\n        e.target.classList.contains('dataflash-copy-btn') ||\n        e.target.classList.contains('dataflash-load-btn') ||\n        e.target.classList.contains('dataflash-delete-btn')) {\n      return;\n    }\n    \n    this.initialX = e.clientX - this.xOffset;\n    this.initialY = e.clientY - this.yOffset;\n\n    if (e.target === panel || e.target.closest('.dataflash-header')) {\n      this.isDragging = true;\n      panel.classList.add('dragging');\n    }\n  }\n\n  /**\n   * Handles panel dragging\n   * @private\n   */\n  drag(e) {\n    if (this.isDragging) {\n      e.preventDefault();\n\n      this.currentX = e.clientX - this.initialX;\n      this.currentY = e.clientY - this.initialY;\n\n      this.xOffset = this.currentX;\n      this.yOffset = this.currentY;\n\n      const panel = document.querySelector('.dataflash-panel');\n      if (panel) {\n        panel.style.transform = `translate(${this.currentX}px, ${this.currentY}px)`;\n      }\n    }\n  }\n\n  /**\n   * Handles end of panel dragging\n   * @private\n   */\n  dragEnd() {\n    this.initialX = this.currentX;\n    this.initialY = this.currentY;\n    this.isDragging = false;\n\n    const panel = document.querySelector('.dataflash-panel');\n    if (panel) {\n      panel.classList.remove('dragging');\n    }\n  }\n}\n","/**\n * Parses clipboard data and extracts numeric and non-numeric columns\n * @param {string} text - The input text to parse\n * @returns {Array} Array of column data with sums and metadata\n */\nexport function parseClipboardData(text) {\n  const lines = text.trim().split(/[\\n\\r]+/);\n  let headers = null;\n  let startIndex = 0;\n  let columnSums = new Map();\n\n  // Check for headers\n  if (lines.length > 0) {\n    const firstLine = lines[0].trim();\n    const isHeader = firstLine.includes('\\t') || isNaN(parseFloat(firstLine.replace(/,/g, '')));\n    \n    if (isHeader) {\n      headers = firstLine.includes('\\t') ? firstLine.split('\\t') : [firstLine];\n      startIndex = 1;\n    }\n  }\n\n  // Initialize columns\n  initializeColumns(lines, startIndex, headers, columnSums);\n\n  // Process data rows\n  processDataRows(lines, startIndex, columnSums);\n\n  // Convert to array of results\n  return formatResults(columnSums);\n}\n\nfunction initializeColumns(lines, startIndex, headers, columnSums) {\n  const firstDataLine = lines[startIndex].split('\\t');\n  firstDataLine.forEach((value, index) => {\n    const isNumericColumn = checkNumericColumn(lines, startIndex, index);\n    columnSums.set(index, {\n      label: headers ? headers[index] : `Column ${index + 1}`,\n      sum: 0,\n      count: 0,\n      isNumeric: isNumericColumn,\n      numbers: []\n    });\n  });\n}\n\nfunction checkNumericColumn(lines, startIndex, columnIndex) {\n  return lines.slice(startIndex).every(line => {\n    const values = line.split('\\t');\n    const value = values[columnIndex];\n    const numValue = parseFloat(value?.replace(/,/g, ''));\n    return !isNaN(numValue);\n  });\n}\n\nfunction processDataRows(lines, startIndex, columnSums) {\n  for (let i = startIndex; i < lines.length; i++) {\n    const line = lines[i].trim();\n    if (!line) continue;\n\n    const values = line.split('\\t');\n    values.forEach((value, colIndex) => {\n      const column = columnSums.get(colIndex);\n      if (column) {\n        const cleanValue = value.trim();\n        if (column.isNumeric) {\n          const numValue = parseFloat(cleanValue.replace(/,/g, ''));\n          if (!isNaN(numValue)) {\n            column.numbers.push(cleanValue);\n            column.sum += numValue;\n          }\n        } else {\n          column.count++;\n          column.numbers.push(cleanValue);\n        }\n      }\n    });\n  }\n}\n\nfunction formatResults(columnSums) {\n  return Array.from(columnSums.values())\n    .filter(column => column.numbers.length > 0)\n    .map(column => ({\n      label: column.label,\n      numbers: column.numbers,\n      sum: column.isNumeric ? column.sum : column.count,\n      isNumeric: column.isNumeric\n    }));\n}\n\n/**\n * Calculates metrics for grouped data\n * @param {Array} groupedData - Array of grouped data objects\n * @returns {Array} Array of calculated metrics\n */\nexport function calculateMetrics(groupedData) {\n  return groupedData.map(group => ({\n    label: group.label,\n    sum: group.sum,\n    numbers: group.numbers,\n    isNumeric: group.isNumeric\n  }));\n}\n","export const panelStyles = `\n.dataflash-panel {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  background: #ffffff;\n  border: none;\n  border-radius: 12px;\n  padding: 16px;\n  box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);\n  z-index: 2147483647;\n  min-width: 280px;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\n  cursor: default;\n  user-select: none;\n  color: #1a1a1a;\n  box-sizing: border-box;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.dataflash-panel.dragging {\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);\n  transition: none;\n}\n\n.dataflash-panel * {\n  box-sizing: border-box;\n}\n\n.dataflash-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n  padding-bottom: 12px;\n  border-bottom: 1px solid #e9ecef;\n  cursor: move;\n}\n\n.dataflash-title {\n  font-weight: 600;\n  margin: 0;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  color: #1a1a1a;\n  letter-spacing: -0.01em;\n}\n\n.dataflash-icon {\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n  object-fit: contain;\n  opacity: 0.9;\n  display: none;\n}\n`;\n\nexport const buttonStyles = `\n.dataflash-minimize,\n.dataflash-close {\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  margin-left: 6px;\n  position: relative;\n  transition: all 0.2s ease;\n  opacity: 0.6;\n}\n\n.dataflash-close {\n  background-color: #ff4757;\n}\n\n.dataflash-minimize {\n  background-color: #ffa502;\n}\n\n.dataflash-minimize:hover,\n.dataflash-close:hover {\n  opacity: 1;\n  transform: scale(1.05);\n}\n\n.dataflash-controls {\n  display: flex;\n  gap: 4px;\n  padding-left: 8px;\n}\n\n.dataflash-add-btn {\n  background: #f8f9fa;\n  border: 1px solid #e9ecef;\n  border-radius: 6px;\n  cursor: pointer;\n  padding: 4px 8px;\n  font-size: 12px;\n  color: #495057;\n  height: 24px;\n  line-height: 1;\n  transition: all 0.2s ease;\n}\n\n.dataflash-add-btn:hover {\n  background: #e9ecef;\n  border-color: #dee2e6;\n}\n`;\n\nexport const contentStyles = `\n.dataflash-content {\n  margin-top: 12px;\n}\n\n.dataflash-input {\n  cursor: text;\n  width: 100%;\n  padding: 12px;\n  margin-bottom: 12px;\n  border: 1px solid #e9ecef;\n  border-radius: 8px;\n  font-size: 13px;\n  background: #f8f9fa;\n  resize: none;\n  height: 100px;\n  color: #495057;\n  display: block;\n  transition: all 0.2s ease;\n  font-family: inherit;\n}\n\n.dataflash-input:focus {\n  outline: none;\n  border-color: #4dabf7;\n  background: #ffffff;\n  box-shadow: 0 0 0 3px rgba(77, 171, 247, 0.1);\n}\n\n.dataflash-metrics {\n  background: #f8f9fa;\n  padding: 12px;\n  border-radius: 8px;\n  font-size: 13px;\n  border: 1px solid #e9ecef;\n}\n\n.dataflash-df-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.dataflash-df-title h4 {\n  margin: 0;\n  color: #1a1a1a;\n  font-size: 14px;\n  font-weight: 600;\n}\n\n.dataflash-save-df-btn {\n  background: #e7f5ff;\n  border: 1px solid #74c0fc;\n  border-radius: 6px;\n  cursor: pointer;\n  padding: 4px 12px;\n  font-size: 14px;\n  color: #1971c2;\n  height: 28px;\n  line-height: 1;\n  transition: all 0.2s ease;\n}\n\n.dataflash-save-df-btn:hover {\n  background: #d0ebff;\n  border-color: #339af0;\n  transform: translateY(-1px);\n}\n\n.dataflash-metrics-header {\n  margin-bottom: 8px;\n}\n\n.dataflash-metric-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.dataflash-metric-row.header {\n  font-weight: 600;\n  color: #495057;\n  padding-bottom: 12px;\n  border-bottom: 2px solid #e9ecef;\n}\n\n.dataflash-metric-col {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.dataflash-metric-col:last-child {\n  text-align: right;\n}\n\n.dataflash-sum-container {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.dataflash-current-sum {\n  color: #1a1a1a;\n  font-weight: 500;\n}\n`;\n\nexport const tabStyles = `\n.dataflash-tabs {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 8px 0;\n  padding-bottom: 8px;\n}\n\n.dataflash-tab-list {\n  display: flex;\n  gap: 4px;\n  flex-grow: 1;\n  overflow-x: auto;\n  scrollbar-width: none;\n  padding: 0 4px;\n}\n\n.dataflash-tab-list::-webkit-scrollbar {\n  display: none;\n}\n\n.dataflash-tab {\n  padding: 6px 12px;\n  border: none;\n  cursor: pointer;\n  font-size: 12px;\n  background: transparent;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: #868e96;\n  position: relative;\n  border-radius: 6px;\n  transition: all 0.2s ease;\n}\n\n.dataflash-tab:hover {\n  background: #f1f3f5;\n  color: #495057;\n}\n\n.dataflash-tab.active {\n  background: #e7f5ff;\n  color: #1971c2;\n  font-weight: 500;\n}\n\n.dataflash-tab-close {\n  opacity: 0.6;\n  font-size: 14px;\n  transition: opacity 0.2s ease;\n}\n\n.dataflash-tab:hover .dataflash-tab-close {\n  opacity: 1;\n}\n\n.dataflash-tab-input {\n  background: none;\n  border: none;\n  font-size: 12px;\n  color: inherit;\n  padding: 0;\n  width: 60px;\n  outline: none;\n}\n`;\n\nexport const minimizedStyles = `\n.dataflash-panel.minimized {\n  padding: 2px;\n  min-width: auto;\n  width: 48px;\n  height: 48px;\n  overflow: hidden;\n  border-radius: 50%;\n  cursor: pointer;\n  background: #ffffff;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.06);\n  transition: all 0.2s ease;\n}\n\n.dataflash-panel.minimized .dataflash-icon {\n  display: block;\n  width: 44px;\n  height: 44px;\n  margin: 0;\n  opacity: 1;\n}\n\n.dataflash-panel.minimized:hover {\n  transform: scale(1.05);\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);\n}\n\n.dataflash-panel.minimized .dataflash-content,\n.dataflash-panel.minimized .dataflash-controls,\n.dataflash-panel.minimized .dataflash-title span {\n  display: none;\n}\n\n.dataflash-panel.minimized .dataflash-header {\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n`;\n\nexport const calculatorStyles = `\n.dataflash-calculator-toggle {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n  font-size: 13px;\n  padding: 12px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #e9ecef;\n  min-height: 28px;\n  transition: all 0.2s ease;\n}\n\n.dataflash-calculator-toggle.calculator-enabled {\n  background: #e7f5ff;\n  border-color: #74c0fc;\n}\n\n.dataflash-calc-left {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex-shrink: 0;\n}\n\n.dataflash-toggle {\n  position: relative;\n  display: inline-block;\n  width: 36px;\n  height: 20px;\n  flex-shrink: 0;\n}\n\n.dataflash-toggle input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.dataflash-toggle-slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ced4da;\n  transition: .3s;\n  border-radius: 20px;\n}\n\n.dataflash-toggle-slider:before {\n  position: absolute;\n  content: \"\";\n  height: 16px;\n  width: 16px;\n  left: 2px;\n  bottom: 2px;\n  background-color: white;\n  transition: .3s;\n  border-radius: 50%;\n}\n\ninput:checked + .dataflash-toggle-slider {\n  background-color: #1971c2;\n}\n\ninput:checked + .dataflash-toggle-slider:before {\n  transform: translateX(16px);\n}\n\n.dataflash-calc-result {\n  font-size: 14px;\n  font-weight: 500;\n  color: #1971c2;\n  cursor: pointer;\n  padding: 4px 8px;\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n}\n\n.dataflash-calc-result:hover {\n  background-color: rgba(25, 113, 194, 0.1);\n}\n\n.dataflash-actions {\n  display: flex;\n  gap: 8px;\n  margin-bottom: 12px;\n}\n\n.dataflash-flush-btn {\n  background: #f8f9fa;\n  border: 1px solid #e9ecef;\n  border-radius: 6px;\n  padding: 6px 12px;\n  font-size: 12px;\n  color: #495057;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.dataflash-flush-btn:hover {\n  background: #e9ecef;\n  border-color: #dee2e6;\n}\n\n.dataflash-saved {\n  margin-top: 12px;\n  border-top: 1px solid #e9ecef;\n  padding-top: 12px;\n}\n\n.dataflash-saved-item {\n  padding: 8px 0;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.dataflash-saved-item.dataframe {\n  padding: 12px 0;\n}\n\n.dataflash-saved-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n}\n\n.dataflash-saved-table {\n  background: #f8f9fa;\n  border-radius: 6px;\n  overflow: hidden;\n  border: 1px solid #e9ecef;\n}\n\n.dataflash-table-header {\n  display: grid;\n  grid-template-columns: 1fr 1fr 120px;\n  gap: 12px;\n  padding: 8px 12px;\n  background: #e9ecef;\n  font-weight: 600;\n  color: #495057;\n}\n\n.dataflash-table-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr 120px;\n  gap: 12px;\n  padding: 8px 12px;\n  align-items: center;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.dataflash-table-row:last-child {\n  border-bottom: none;\n}\n\n.dataflash-table-col {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.dataflash-table-col:nth-child(2) {\n  text-align: right;\n}\n\n.dataflash-column-controls {\n  display: flex;\n  gap: 4px;\n  justify-content: flex-end;\n}\n\n.dataflash-saved-info {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.dataflash-saved-label {\n  color: #1971c2;\n  font-weight: 500;\n  cursor: pointer;\n  padding: 2px 6px;\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n}\n\n.dataflash-saved-label:hover {\n  background-color: #e7f5ff;\n}\n\n.dataflash-saved-value {\n  color: #868e96;\n  font-size: 12px;\n}\n\n.dataflash-saved-controls button,\n.dataflash-column-controls button {\n  background: #f8f9fa;\n  border: 1px solid #e9ecef;\n  padding: 4px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  color: #495057;\n}\n\n.dataflash-saved-controls button:hover,\n.dataflash-column-controls button:hover {\n  background: #e7f5ff;\n  border-color: #74c0fc;\n  transform: translateY(-1px);\n}\n\n.dataflash-saved-controls .dataflash-copy-btn:hover,\n.dataflash-column-controls .dataflash-copy-btn:hover {\n  background: #e7f5ff;\n  border-color: #74c0fc;\n  color: #1971c2;\n}\n\n.dataflash-saved-controls .dataflash-stats-btn:hover,\n.dataflash-column-controls .dataflash-stats-btn:hover {\n  background: #e6fcf5;\n  border-color: #63e6be;\n  color: #0ca678;\n}\n\n.dataflash-saved-controls .dataflash-load-btn:hover,\n.dataflash-column-controls .dataflash-load-btn:hover {\n  background: #fff3bf;\n  border-color: #ffd43b;\n  color: #f08c00;\n}\n\n.dataflash-saved-controls .dataflash-delete-btn:hover,\n.dataflash-column-controls .dataflash-delete-btn:hover {\n  background: #ffe3e3;\n  border-color: #ffa8a8;\n  color: #e03131;\n}\n\n.dataflash-saved-controls svg,\n.dataflash-column-controls svg {\n  width: 13px;\n  height: 13px;\n  fill: none;\n  stroke: currentColor;\n  stroke-width: 2;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n`;\n\n// Combine all styles\nexport const allStyles = [\n  panelStyles,\n  buttonStyles,\n  contentStyles,\n  tabStyles,\n  minimizedStyles,\n  calculatorStyles\n].join('\\n');\n","import { Panel } from './components/Panel.js';\nimport { DOMService } from './services/domService.js';\nimport { allStyles } from './styles/styles.js';\nimport { KEYBOARD_SHORTCUTS, WHITELISTED_DOMAINS } from './constants/config.js';\n\nclass DataFlash {\n  constructor() {\n    this.panel = null;\n    this.isWhitelistedDomain = false;\n  }\n\n  /**\n   * Initializes the DataFlash extension\n   */\n  initialize() {\n    // Inject styles\n    DOMService.injectStyles(allStyles);\n\n    // Create panel\n    this.panel = new Panel();\n    this.panel.create();\n\n    // Add keyboard shortcut\n    this.addKeyboardShortcut();\n  }\n\n  /**\n   * Adds keyboard shortcut for toggling panel\n   * @private\n   */\n  addKeyboardShortcut() {\n    document.addEventListener('keydown', (e) => {\n      const shortcut = KEYBOARD_SHORTCUTS.TOGGLE_PANEL;\n      if ((e.ctrlKey || e.metaKey) && e.shiftKey && e.key === shortcut.key) {\n        const existingPanel = document.querySelector('.dataflash-panel');\n        if (existingPanel) {\n          existingPanel.remove();\n          this.panel = null;\n        } else {\n          this.panel = new Panel();\n          this.panel.create();\n        }\n      }\n    });\n  }\n\n  /**\n   * Checks if current domain is whitelisted\n   * @returns {boolean} Whether domain is whitelisted\n   */\n  checkWhitelistedDomain() {\n    const currentUrl = window.location.hostname;\n    return WHITELISTED_DOMAINS.some(domain => currentUrl.includes(domain));\n  }\n}\n\n// Initialize extension\nconst app = new DataFlash();\n\n// Check if we're on a whitelisted domain\napp.isWhitelistedDomain = app.checkWhitelistedDomain();\n\n// Listen for messages from the background script\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  if (message.action === \"activate_extension\") {\n    // Force activation regardless of domain\n    app.initialize();\n  }\n});\n\n// Only auto-initialize if we're on a whitelisted domain\nif (app.isWhitelistedDomain) {\n  app.initialize();\n}\n\n// Log initialization\nconsole.log('DataFlash content script loaded');\n"],"names":["DOMService","_classCallCheck","key","value","tag","props","arguments","length","undefined","element","document","createElement","Object","entries","forEach","_ref","_ref2","_slicedToArray","className","innerHTML","textContent","setAttribute","styles","styleSheet","head","appendChild","this","_objectSpread","type","listeners","_ref3","_ref4","event","handler","addEventListener","content","filename","blob","Blob","url","URL","createObjectURL","a","href","download","body","click","removeChild","revokeObjectURL","text","navigator","clipboard","writeText","evaluateExpression","expr","replace","trim","test","parseFloat","result","tokens","numbers","operators","precedence","applyOp","op","pop","b","push","_step","_iterator","_createForOfIteratorHelper","s","n","done","token","includes","err","e","f","calculate","numBuffer","isNegative","i","char","parseTokens","isFinite","Number","isInteger","toFixed","console","error","Calculator","isEnabled","_this","container","leftSection","toggle","input","id","checked","slider","label","resultContainer","classList","add","log","textarea","updateUI","_this2","attempts","initializeToggle","calcToggle","querySelector","setTimeout","placeholder","processExpression","updateResult","resultElement","formattedResult","toLocaleString","concat","style","display","numericResult","isNaN","Tabs","activeTabs","name","savedSums","activeTabId","panel","onTabChange","tabList","map","tab","join","addTabEventListeners","querySelectorAll","tabEl","tabId","dataset","target","updateTabs","nameEl","stopPropagation","makeTabNameEditable","closeBtn","closeTab","_this3","find","t","isActive","closest","contains","fontWeight","replaceWith","focus","select","saveName","newName","addEventListeners","blur","keydown","preventDefault","tabIndex","findIndex","splice","Math","max","newTabId","_this4","KEYBOARD_SHORTCUTS","ctrl","shift","WHITELISTED_DOMAINS","ICON_URL","chrome","runtime","getURL","_regeneratorRuntime","r","prototype","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","_defineProperties","_toPropertyKey","toPrimitive","String","_toPrimitive","Panel","calculator","tabs","isDragging","currentX","currentY","initialX","initialY","xOffset","yOffset","insertBefore","createToggle","firstChild","updateSavedDisplay","minimizeBtn","addTabBtn","clearBtn","remove","transform","dragStart","bind","drag","dragEnd","handleToggle","metricsContainer","groupedData","lines","split","headers","startIndex","columnSums","Map","firstLine","index","isNumericColumn","columnIndex","every","line","numValue","checkNumericColumn","set","sum","count","isNumeric","initializeColumns","colIndex","column","get","cleanValue","processDataRows","Array","from","filter","formatResults","parseClipboardData","metrics","group","calculateMetrics","addTab","dispatchEvent","Event","currentMetricsDiv","headerDiv","tableHeader","metric","metricDiv","savedSection","addMetricEventListeners","activeTab","getActiveTab","savedDisplay","columns","col","addSavedItemEventListeners","saveButton","clearButton","reduce","m","flat","_this5","parseInt","currentLabel","saveLabel","btn","_callee","originalHTML","_context","copyToClipboard","toString","average","min","_toConsumableArray","statsText","currentTarget","clientX","clientY","allStyles","app","DataFlash","isWhitelistedDomain","injectStyles","addKeyboardShortcut","shortcut","ctrlKey","metaKey","shiftKey","existingPanel","currentUrl","window","location","hostname","some","domain","checkWhitelistedDomain","onMessage","addListener","message","sender","sendResponse","action","initialize"],"sourceRoot":""}